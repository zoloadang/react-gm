#!/usr/bin/env node
'use strict';

var _yargs = require('yargs');

var _yargs2 = _interopRequireDefault(_yargs);

var _utils = require('../../build/node/utils');

var _node = require('../../build/node');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-line import/no-unresolved

var options = {
  unknown: '[?]',
  replace: [],
  ignore: []
}; // eslint-disable-line import/no-unresolved


var argv = _yargs2.default.version().usage('Usage: $0 <unicode> [options]').option('u', {
  alias: 'unknown',
  default: options.unknown,
  describe: 'Placeholder for unknown characters',
  type: 'string'
}).option('r', {
  alias: 'replace',
  default: options.replace,
  describe: 'Custom string replacement',
  type: 'array'
}).option('i', {
  alias: 'ignore',
  default: options.ignore,
  describe: 'String list to ignore',
  type: 'array'
}).help('h').option('h', {
  alias: 'help'
}).example('$0 "你好, world!" -r 好=good -r "world=Shi Jie"', 'Replace `,` into `!`, `world` into `shijie`.\nResult: Ni good, Shi Jie!').example('$0 "你好，世界!" -i 你好 -i ，', 'Ignore `你好` and `，`.\nResult: 你好，Shi Jie !').wrap(100).argv;

options.unknown = argv.u;
if (argv.replace.length) {
  for (var _iterator = argv.replace, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var repl = _ref;

    var tmp = (0, _utils.parseCmdEqualOption)(repl);
    if (tmp === false) {
      console.error('Bad argument -r or --replace. Please try \'' + argv.$0 + ' --help\' for correct usage.');
      process.exit(1);
    }
    options.replace.push(tmp);
  }
}
options.ignore = argv.ignore;
if (argv._.length !== 1) {
  console.error('Invalid argument. Please try \'' + argv.$0 + ' --help\' for correct usage.');
}
console.log((0, _node.transliterate)(argv._[0], options));